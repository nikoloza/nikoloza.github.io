.columns (@property: 1, @title: col) {
	> .@{title}-@{property} {
		@one_column: 100% / @grid-children;
		width: @one_column * @property;
	}
}

.generate-column(@n, @i: 1) when (@i =< @n) {
	.columns(@i, col);
	.generate-column(@n, (@i + 1));
}

.row > {
	display: block;

	&:after {
		content: "";
		clear: both;
		display: block;
		height: 1px;
		float: none;
	}

	> [class^="col"],
	> [class*=" col"] {
		float: left;
		padding-right: @grid-padding / 2;
		padding-left: @grid-padding / 2;
		min-height: 1px;
		.sizing;
	}

	&.no-padding {
		> [class^="col"],
		> [class*=" col"] {
			padding: 0;
		}
	}

	&.no-side-padding {
		margin-left: -@grid-padding / 2;
		margin-right: -@grid-padding / 2;
	}

	&.twice-padding {
		> [class^="col"],
		> [class*=" col"] {
			padding-right: @grid-padding * 2;
			padding-left: @grid-padding * 2;
		}

		&.no-side-padding {
			margin-left: -@grid-padding * 2;
			margin-right: -@grid-padding * 2;
		}
	}

	&.no-float {
		font-size: 0;

		> [class^="col"],
		> [class*=" col"] {
			float: none;
			display: inline-block;
			vertical-align: top;
			font-size: @font-size;
		}
	}

	.generate-column(@grid-children);

}



// responsive gridding
// 1920px
html when (@grid-children-large-screen > 0) {
	@media all and (min-width: (@big-screen - 1px)) {

		.columns (@property: 1, @title) {
			> .@{title}-@{property} {
				@one_column: 100% / @grid-children-large-screen;
				width: @one_column * @property;
			}
		}

		.generate-column(@n, @i: 1) when (@i =< @n) {
			.columns(@i, col-sl);
			.generate-column(@n, (@i + 1));
		}

		.row {
			.generate-column(@grid-children-large-screen);
		}

	}
}

// // 1680px
html when (@grid-children-big-screen > 0) {
	@media all and (max-width: @big-screen) {

		.columns (@property: 1, @title) {
			> .@{title}-@{property} {
				@one_column: 100% / @grid-children-big-screen;
				width: @one_column * @property;
			}
		}

		.generate-column(@n, @i: 1) when (@i =< @n) {
			.columns(@i, col-sb);
			.generate-column(@n, (@i + 1));
		}

		.row {
			.generate-column(@grid-children-big-screen);
		}

	}
}

// // 1680px
html when (@grid-children-normal-screen > 0) {
	@media all and (max-width: @normal-screen) {

		.columns (@property: 1, @title) {
			> .@{title}-@{property} {
				@one_column: 100% / @grid-children-normal-screen;
				width: @one_column * @property;
			}
		}

		.generate-column(@n, @i: 1) when (@i =< @n) {
			.columns(@i, col-sn);
			.generate-column(@n, (@i + 1));
		}

		.row {
			.generate-column(@grid-children-normal-screen);
		}

	}
}

// // 1336px
html when (@grid-children-small-screen > 0) {
	@media all and (max-width: @small-screen) {

		.columns (@property: 1, @title) {
			> .@{title}-@{property} {
				@one_column: 100% / @grid-children-small-screen;
				width: @one_column * @property;
			}
		}

		.generate-column(@n, @i: 1) when (@i =< @n) {
			.columns(@i, col-ss);
			.generate-column(@n, (@i + 1));
		}

		.row {
			.generate-column(@grid-children-small-screen);
		}

	}
}

// // 1024px
html when (@grid-children-tablet > 0) {
	@media all and (max-width: @tablet) {

		.columns (@property: 1, @title) {
			> .@{title}-@{property} {
				@one_column: 100% / @grid-children-tablet;
				width: @one_column * @property;
			}
		}

		.generate-column(@n, @i: 1) when (@i =< @n) {
			.columns(@i, col-tl);
			.generate-column(@n, (@i + 1));
		}

		.row {
			.generate-column(@grid-children-tablet);
		}

	}
}

// // 840px
html when (@grid-children-small-tablet > 0) {
	@media all and (max-width: @small-tablet) {

		.columns (@property: 1, @title) {
			> .@{title}-@{property} {
				@one_column: 100% / @grid-children-small-tablet;
				width: @one_column * @property;
			}
		}

		.generate-column(@n, @i: 1) when (@i =< @n) {
			.columns(@i, col-tp);
			.generate-column(@n, (@i + 1));
		}

		.row {
			.generate-column(@grid-children-small-tablet);
		}

	}
}

// // 728px
html when (@grid-children-mobile > 0) {
	@media all and (max-width: @mobile) {

		.columns (@property: 1, @title) {
			> .@{title}-@{property} {
				@one_column: 100% / @grid-children-mobile;
				width: @one_column * @property;
			}
		}

		.generate-column(@n, @i: 1) when (@i =< @n) {
			.columns(@i, col-ml);
			.generate-column(@n, (@i + 1));
		}

		.row {
			.generate-column(@grid-children-mobile);
		}

	}
}

// // 480px
html when (@grid-children-small-mobile > 0) {
	@media all and (max-width: @small-mobile) {

		.columns (@property: 1, @title) {
			> .@{title}-@{property} {
				@one_column: 100% / @grid-children-small-mobile;
				width: @one_column * @property;
			}
		}

		.generate-column(@n, @i: 1) when (@i =< @n) {
			.columns(@i, col-mp);
			.generate-column(@n, (@i + 1));
		}

		.row {
			.generate-column(@grid-children-small-mobile);
		}

	}
}